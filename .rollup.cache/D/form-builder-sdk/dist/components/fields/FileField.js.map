{"version":3,"file":"FileField.js","sourceRoot":"","sources":["../../../src/components/fields/FileField.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useRef } from \"react\";\nimport { FormFieldProps } from \"@/lib/types\";\nimport { cn, applyInlineStyles, formatFileSize } from \"@/lib/utils\";\nimport { UploadIcon, FileIcon, TrashIcon } from \"@radix-ui/react-icons\";\n\nexport function FileField({ field, value, onChange, error, className }: FormFieldProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const inputStyles = applyInlineStyles(field.style.input);\n  const labelStyles = applyInlineStyles(field.style.label);\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    onChange(file);\n  };\n\n  const handleRemoveFile = () => {\n    onChange(null);\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n\n  const acceptedTypes = field.validation.fileTypes?.map(type => `.${type}`).join(\",\");\n\n  return (\n    <div className={cn(\"space-y-1\", className)}>\n      {field.label && (\n        <label \n          htmlFor={field.id}\n          className=\"block text-sm font-medium\"\n          style={labelStyles}\n        >\n          {field.label}\n          {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"space-y-2\">\n        <input\n          ref={inputRef}\n          id={field.id}\n          name={field.name}\n          type=\"file\"\n          accept={acceptedTypes}\n          onChange={handleFileSelect}\n          className=\"hidden\"\n        />\n        \n        {!value ? (\n          <div\n            className={cn(\n              \"flex flex-col items-center justify-center w-full border-2 border-dashed rounded cursor-pointer bg-gray-50 hover:bg-gray-100 transition-colors\",\n              error ? \"border-red-500\" : \"border-gray-300\"\n            )}\n            style={{\n              ...inputStyles,\n              minHeight: inputStyles.height || '120px',\n              padding: '20px',\n              borderColor: error ? '#ef4444' : inputStyles.borderColor || '#d1d5db',\n              borderWidth: inputStyles.borderWidth || '2px',\n              borderRadius: inputStyles.borderRadius || '4px'\n            }}\n            onClick={() => inputRef.current?.click()}\n          >\n            <div className=\"flex items-center justify-center text-center\">\n              {/* <p className=\"text-sm text-gray-600 mb-1\">\n                <span className=\"font-medium\">Click to upload</span>\n              </p> */}\n              <p className=\"text-xs text-gray-500\">{field.placeholder}</p>\n              <UploadIcon className=\"w-6 h-6 mb-2 text-gray-400\" />\n            </div>\n            {field.validation.fileTypes && (\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Supported formats: {field.validation.fileTypes.join(\", \").toUpperCase()}\n                </p>\n              )}\n              {field.validation.maxFileSize && (\n                <p className=\"text-xs text-gray-500\">\n                  Max size: {field.validation.maxFileSize}MB\n                </p>\n              )}\n          </div>\n        ) : (\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded border\">\n            <div className=\"flex items-center space-x-3\">\n              <FileIcon className=\"w-5 h-5 text-gray-500\" />\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">{value.name}</p>\n                <p className=\"text-xs text-gray-500\">{formatFileSize(value.size)}</p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={handleRemoveFile}\n              className=\"text-red-500 hover:text-red-700 p-1\"\n            >\n              <TrashIcon className=\"w-4 h-4\" />\n            </button>\n          </div>\n        )}\n      </div>\n      \n      {error && (\n        <p className=\"text-sm text-red-500 mt-1\">{error}</p>\n      )}\n    </div>\n  );\n}\n"]}