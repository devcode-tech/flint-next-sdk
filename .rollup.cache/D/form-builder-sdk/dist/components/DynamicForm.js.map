{"version":3,"file":"DynamicForm.js","sourceRoot":"","sources":["../../src/components/DynamicForm.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { FormSchema, FormField as FormFieldType, FormData } from \"@/lib/types\";\nimport { createFormValidationSchema } from \"@/lib/validation\";\nimport { cn, applyInlineStyles } from \"@/lib/utils\";\nimport { \n  TextField, \n  EmailField, \n  DateField, \n  PostalField, \n  FileField, \n  CheckboxField, \n  DropdownField, \n  TermsField \n} from \"@/components/fields\";\n\ninterface DynamicFormProps {\n  schema: FormSchema;\n  onSubmit: (data: FormData) => void | Promise<void>;\n  isSubmitting?: boolean;\n  className?: string;\n}\n\nfunction FormField({ field, register, setValue, watch, errors, trigger, isSubmitted }: {\n  field: FormFieldType;\n  register: any;\n  setValue: any;\n  watch: any;\n  errors: any;\n  trigger: any;\n  isSubmitted: boolean;\n}) {\n  const value = watch(field.name);\n  const error = errors[field.name]?.message;\n\n  // Register the field with React Hook Form\n  React.useEffect(() => {\n    register(field.name);\n  }, [register, field.name]);\n\n  const handleChange = (newValue: any) => {\n    setValue(field.name, newValue, { shouldValidate: false, shouldDirty: true });\n    // Trigger validation on blur or after user stops typing\n    if (isSubmitted) {\n      // If form was already submitted, show immediate validation feedback\n      setTimeout(() => {\n        trigger(field.name);\n      }, 300);\n    }\n  };\n\n  const handleBlur = () => {\n    // Always validate on blur to show custom error messages\n    trigger(field.name);\n  };\n\n  const fieldProps = {\n    field,\n    value,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error,\n    className: \"\"\n  };\n\n  switch (field.type) {\n    case \"text\":\n      return <TextField {...fieldProps} />;\n    case \"email\":\n      return <EmailField {...fieldProps} />;\n    case \"date\":\n      return <DateField {...fieldProps} />;\n    case \"postal\":\n      return <PostalField {...fieldProps} />;\n    case \"file\":\n      return <FileField {...fieldProps} />;\n    case \"checkbox\":\n      return <CheckboxField {...fieldProps} />;\n    case \"dropdown\":\n      return <DropdownField {...fieldProps} />;\n    case \"terms\":\n      return <TermsField {...fieldProps} />;\n    default:\n      return <TextField {...fieldProps} />;\n  }\n}\n\nexport function DynamicForm({ \n  schema, \n  onSubmit, \n  isSubmitting = false, \n  className \n}: DynamicFormProps) {\n  const validationSchema = createFormValidationSchema(schema);\n\n  // Effect to load custom font\n  React.useEffect(() => {\n    if (schema.design['font-link'] && schema.design['font-family'] === 'custom') {\n      const existingLink = document.querySelector(`link[href=\"${schema.design['font-link']}\"]`);\n      if (!existingLink) {\n        const link = document.createElement('link');\n        link.href = schema.design['font-link'];\n        link.rel = 'stylesheet';\n        document.head.appendChild(link);\n      }\n    }\n  }, [schema.design['font-link'], schema.design['font-family']]);\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitted },\n    setValue,\n    watch,\n    trigger\n  } = useForm({\n    resolver: zodResolver(validationSchema),\n    mode: \"onSubmit\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true\n  });\n\n  const containerStyles = applyInlineStyles({\n    'background-color': schema.design['background-color'],\n    'font-family': schema.design['font-family'] === 'custom' ? 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif' : schema.design['font-family'],\n    padding: undefined, // Let Tailwind handle padding\n    'border-radius': undefined, // Let Tailwind handle border-radius\n    'box-shadow': undefined // Let Tailwind handle box-shadow\n  });\n\n  const submitButtonStyles = applyInlineStyles({\n    'background-color': schema.design['submit-button']['background-color'],\n    color: schema.design['submit-button']['text-color'],\n    padding: schema.design['submit-button'].padding,\n    'border-radius': schema.design['submit-button']['border-radius'],\n    'font-size': schema.design['submit-button']['font-size'],\n    'font-weight': schema.design['submit-button']['font-weight']\n  });\n\n  const getSubmitButtonAlignment = () => {\n    switch (schema.design['submit-button'].alignment) {\n      case 'left':\n        return 'justify-start';\n      case 'right':\n        return 'justify-end';\n      case 'center':\n      default:\n        return 'justify-center';\n    }\n  };\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className={cn(\n          schema.design.padding,\n          schema.design['max-width'],\n          schema.design['border-radius'],\n          schema.design['box-shadow'],\n          \"mx-auto\",\n          schema.design.spacing.container\n        )}\n        style={containerStyles}\n      >\n        {/* Form Title */}\n        {schema.title && (\n          <div className=\"mb-8 text-center\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              {schema.title}\n            </h1>\n            {schema.description && (\n              <p className=\"mt-2 text-gray-600\">{schema.description}</p>\n            )}\n          </div>\n        )}\n\n        {/* Logo */}\n        {schema.design['logo-url'] && (\n          <div className=\"mb-8 text-center\">\n            <img\n              src={schema.design['logo-url']}\n              alt=\"Logo\"\n              className=\"mx-auto max-h-20\"\n            />\n          </div>\n        )}\n\n        {/* Form Fields */}\n        <div className=\"flex flex-wrap -mx-2\">\n          {schema.fields.map((field) => {\n            // Skip fields without names (like text-only terms)\n            if (!field.name || !field.name.trim()) {\n              return (\n                <div\n                  key={field.id}\n                  className={cn(field.width, \"px-2 mb-6\")}\n                >\n                  <TermsField\n                    field={field}\n                    value={undefined}\n                    onChange={() => {}}\n                    className=\"\"\n                  />\n                </div>\n              );\n            }\n\n            return (\n              <div\n                key={field.id}\n                className={cn(field.width, \"px-2 mb-6\")}\n              >\n                <FormField\n                  field={field}\n                  register={register}\n                  setValue={setValue}\n                  watch={watch}\n                  errors={errors}\n                  trigger={trigger}\n                  isSubmitted={isSubmitted}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Submit Button */}\n        <div className={cn(\"flex mt-8\", getSubmitButtonAlignment())}>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className={cn(\n              \"px-8 py-3 rounded-md font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n              schema.design['submit-button'].width === 'auto' ? 'w-auto' : 'w-full'\n            )}\n            style={submitButtonStyles}\n          >\n            {isSubmitting ? \"Submitting...\" : schema.design['submit-button'].text}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]}