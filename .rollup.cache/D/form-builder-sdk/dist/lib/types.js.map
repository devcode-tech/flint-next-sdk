{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/lib/types.ts"],"names":[],"mappings":"","sourcesContent":["// Core type definitions for the Dynamic Form SDK\n\nexport interface FormFieldStyle {\n  label?: {\n    color?: string;\n    'font-weight'?: string;\n    'font-size'?: string;\n    'text-align'?: 'left' | 'center' | 'right';\n    'margin-bottom'?: string;\n  };\n  input?: {\n    'background-color'?: string;\n    'border-color'?: string;\n    'border-radius'?: string;\n    'border-width'?: string;\n    padding?: string;\n    'font-size'?: string;\n    height?: string;\n    color?: string;\n  };\n}\n\nexport interface FormFieldValidation {\n  requiredMessage?: string;\n  emailMessage?: string;\n  dateFormat?: string;\n  dateFormatMessage?: string;\n  minAge?: number;\n  minAgeMessage?: string;\n  maxDate?: string;\n  postalFormat?: string;\n  maxFileSize?: number;\n  fileTypes?: string[];\n  fileSizeMessage?: string;\n  fileTypeMessage?: string;\n}\n\nexport interface FormFieldOption {\n  id: string;\n  label: string;\n  value: string;\n}\n\nexport interface FormFieldLink {\n  id: string;\n  text: string;\n  url: string;\n}\n\nexport type FormFieldType = \n  | 'text' \n  | 'email' \n  | 'date' \n  | 'postal' \n  | 'file' \n  | 'checkbox' \n  | 'dropdown' \n  | 'terms';\n\nexport interface FormField {\n  id: string;\n  name: string;\n  type: FormFieldType;\n  label: string;\n  placeholder: string;\n  required: boolean;\n  validation: FormFieldValidation;\n  width: string;\n  style: FormFieldStyle;\n  dateFormat?: string;\n  options?: FormFieldOption[];\n  mode?: 'checkbox' | 'text';\n  content?: string;\n  links?: FormFieldLink[];\n}\n\nexport interface FormSubmitButton {\n  text: string;\n  'background-color': string;\n  'text-color': string;\n  padding: string;\n  'border-radius': string;\n  'font-size': string;\n  'font-weight': string;\n  width: string;\n  alignment: 'left' | 'center' | 'right';\n}\n\nexport interface FormDesign {\n  'background-color': string;\n  'font-family': string;\n  'font-size': string;\n  padding: string;\n  'max-width': string;\n  'border-radius': string;\n  'box-shadow': string;\n  'logo-url': string;\n  'submit-button': FormSubmitButton;\n  spacing: {\n    container: string;\n    fields: string;\n  };\n  'font-link': string;\n}\n\nexport interface FormSchema {\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  fields: FormField[];\n  design: FormDesign;\n}\n\nexport type FormData = Record<string, any>;\n\nexport interface FormFieldProps {\n  field: FormField;\n  value?: any;\n  onChange: (value: any) => void;\n  onBlur?: () => void;\n  error?: string;\n  className?: string;\n}\n"]}