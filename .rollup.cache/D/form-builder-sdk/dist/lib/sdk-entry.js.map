{"version":3,"file":"sdk-entry.js","sourceRoot":"","sources":["../../src/lib/sdk-entry.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { DynamicForm } from '@/components/DynamicForm';\r\nimport type { FormData } from '@/lib/types';\r\nimport formSchema from '@/app/page-schema';\r\nimport { validateFormData, rateLimiter, sanitizeInput } from './security'\r\n\r\n// Import bundled styles\r\nimport './sdk-styles.css';\r\n\r\ninterface FlintFormConfig {\r\n  containerId?: string;\r\n  onSubmit?: (data: FormData) => void | Promise<void>;\r\n  onError?: (error: Error) => void;\r\n  enableRateLimiting?: boolean;\r\n  maxRetries?: number;\r\n}\r\n\r\nclass FlintForm {\r\n  private root: ReactDOM.Root | null = null;\r\n  private container: HTMLElement | null = null;\r\n  private config: FlintFormConfig | null = null;\r\n  private retryCount: number = 0;\r\n\r\n  init(config?: FlintFormConfig) {\r\n    const { \r\n      containerId = 'flint-form-root', \r\n      onSubmit, \r\n      onError,\r\n      enableRateLimiting = true,\r\n      maxRetries = 3\r\n    } = config || {};\r\n\r\n    this.config = { \r\n      containerId, \r\n      onSubmit, \r\n      onError, \r\n      enableRateLimiting, \r\n      maxRetries \r\n    };\r\n\r\n    this.container = document.getElementById(containerId);\r\n    \r\n    if (!this.container) {\r\n      const error = new Error(`Container with id \"${containerId}\" not found`);\r\n      this.handleError(error, onError);\r\n      return;\r\n    }\r\n\r\n    // Secure the container\r\n    this.secureContainer();\r\n\r\n    const secureOnSubmit = async (data: FormData) => {\r\n      try {\r\n        // Security validation\r\n        if (!validateFormData(data)) {\r\n          throw new Error('Invalid form data detected');\r\n        }\r\n\r\n        // Rate limiting\r\n        if (enableRateLimiting && !rateLimiter.isAllowed(containerId)) {\r\n          throw new Error('Too many submission attempts. Please wait before trying again.');\r\n        }\r\n\r\n        // Sanitize string inputs\r\n        const sanitizedData = this.sanitizeFormData(data);\r\n\r\n        // Call user's onSubmit or default handler\r\n        if (onSubmit) {\r\n          await onSubmit(sanitizedData);\r\n          rateLimiter.reset(containerId); // Reset on success\r\n        } else {\r\n          console.log('Form submitted:', sanitizedData);\r\n          alert('Form submitted successfully!');\r\n        }\r\n\r\n        this.retryCount = 0; // Reset retry count on success\r\n      } catch (error) {\r\n        this.handleSubmissionError(error as Error, data);\r\n      }\r\n    };\r\n\r\n    try {\r\n      this.root = ReactDOM.createRoot(this.container);\r\n      \r\n      this.root.render(\r\n        React.createElement(DynamicForm, {\r\n          schema: formSchema,\r\n          onSubmit: secureOnSubmit\r\n        })\r\n      );\r\n    } catch (error) {\r\n      this.handleError(error as Error, onError);\r\n    }\r\n  }\r\n\r\n  private secureContainer() {\r\n    if (!this.container) return;\r\n\r\n    // Prevent clickjacking\r\n    this.container.style.position = 'relative';\r\n    this.container.style.zIndex = '1';\r\n    \r\n    // Add security attributes\r\n    this.container.setAttribute('data-flint-form', 'true');\r\n    this.container.setAttribute('role', 'form');\r\n    this.container.setAttribute('aria-label', 'Dynamic Form');\r\n  }\r\n\r\n  private sanitizeFormData(data: FormData): FormData {\r\n    const sanitized: FormData = {};\r\n    \r\n    for (const [key, value] of Object.entries(data)) {\r\n      if (typeof value === 'string') {\r\n        sanitized[key] = sanitizeInput(value);\r\n      } else if (Array.isArray(value)) {\r\n        sanitized[key] = value.map(v => \r\n          typeof v === 'string' ? sanitizeInput(v) : v\r\n        );\r\n      } else {\r\n        sanitized[key] = value;\r\n      }\r\n    }\r\n    \r\n    return sanitized;\r\n  }\r\n\r\n  private handleSubmissionError(error: Error, originalData: FormData) {\r\n    const { maxRetries = 3, onError } = this.config || {};\r\n\r\n    if (this.retryCount < maxRetries && error.message.includes('network')) {\r\n      this.retryCount++;\r\n      console.warn(`Retrying submission (${this.retryCount}/${maxRetries})...`);\r\n      \r\n      setTimeout(() => {\r\n        if (this.config?.onSubmit) {\r\n          this.config.onSubmit(originalData);\r\n        }\r\n      }, 1000 * this.retryCount); // Exponential backoff\r\n    } else {\r\n      this.handleError(error, onError);\r\n      this.retryCount = 0;\r\n    }\r\n  }\r\n\r\n  private handleError(error: Error, onError?: (error: Error) => void) {\r\n    // Never expose sensitive error details to users\r\n    const safeError = new Error('An error occurred. Please try again.');\r\n    \r\n    // Log full error for debugging (only in development)\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.error('Flint Form Error:', error);\r\n    }\r\n\r\n    if (onError) {\r\n      onError(safeError);\r\n    } else {\r\n      console.error('Flint Form:', safeError.message);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.root) {\r\n      this.root.unmount();\r\n      this.root = null;\r\n      this.container = null;\r\n      this.config = null;\r\n      this.retryCount = 0;\r\n    }\r\n  }\r\n\r\n  // Get SDK version\r\n  static getVersion(): string {\r\n    return '1.0.0';\r\n  }\r\n\r\n  // Check if SDK is initialized\r\n  isInitialized(): boolean {\r\n    return this.root !== null;\r\n  }\r\n}\r\n\r\n// Auto-initialize with security checks\r\nif (typeof window !== 'undefined') {\r\n  (window as any).FlintForm = FlintForm;\r\n  \r\n  const autoInit = () => {\r\n    // Verify we're in a secure context (HTTPS or localhost)\r\n    if (location.protocol !== 'https:' && location.hostname !== 'localhost') {\r\n      console.warn('Flint Form: For security, please use HTTPS in production');\r\n    }\r\n\r\n    const container = document.getElementById('flint-form-root');\r\n    if (container) {\r\n      const form = new FlintForm();\r\n      form.init();\r\n    }\r\n  };\r\n\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', autoInit);\r\n  } else {\r\n    autoInit();\r\n  }\r\n}\r\n\r\nexport { FlintForm };\r\nexport default FlintForm;"]}